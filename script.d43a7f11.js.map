{"version":3,"sources":["script/Services/CalenderAPIService.ts","script/Index/Calendar.ts","script/Index/UX.ts","script/Index/index.ts","script/script.ts"],"names":[],"mappings":"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","file":"script.d43a7f11.js","sourceRoot":"..\\src","sourcesContent":["import { CalendarData } from '../types/CalendarData';\r\nimport {Event} from \"../types/Event\";\r\n\r\nexport default class CalendarAPIService {\r\n\r\n    private readonly apiKey = \"AIzaSyD227OlDj5joTJ_SlnqDXwkOMQs-eKLLoU\";\r\n    private readonly calendarID = \"5sos0lr58khddl91ebog1muvbc@group.calendar.google.com\";\r\n    private readonly maxResults = 4;\r\n\r\n\r\n    async getEvents():Promise<Event[]> {\r\n        const data = await this.getDataFromAPI();\r\n        const events = this.convertData(data);\r\n        return events;\r\n    }\r\n\r\n\r\n    private async getDataFromAPI():Promise<CalendarData> {\r\n        const date = new Date().toISOString();\r\n        let calendarData:CalendarData = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${this.calendarID}/events?maxResults=${this.maxResults}&orderBy=startTime&singleEvents=True&timeMin=${date}&key=${this.apiKey}`)\r\n                                              .then(body=>body.json());\r\n        return calendarData;\r\n    }\r\n\r\n\r\n    private convertData(data:CalendarData):Event[] {\r\n        const events:Event[] = new Array<Event>();\r\n        for(let item of data.items) {\r\n            const event:Event = {\r\n                date: new Date(item.start.dateTime),\r\n                name: item.summary\r\n            }\r\n            events.push(event);\r\n        }\r\n\r\n        return events;\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Event } from \"../types/Event\";\r\nimport CalendarEventService from \"./../Services/CalenderAPIService\";\r\n\r\nexport default class Calendar {\r\n    private eventsCon = document.querySelector(\".events\");\r\n    private daysEle:HTMLSpanElement[] = new Array<HTMLSpanElement>();\r\n    private daysUntilToday = 0;\r\n    \r\n\r\n    async init() {\r\n        try {\r\n            const date = new Date();\r\n            const events = await new CalendarEventService().getEvents();\r\n            const monthNameEle:HTMLDivElement = document.querySelector(\".calender_nav .date\");\r\n            this.generateCalendarDays()\r\n            if(events.length > 0) {\r\n                for(let event of events) {\r\n                    this.makeEventCard(event);\r\n                    if(event.date.getMonth() === date.getMonth()) {\r\n                        this.markCalendarDay(event.date.getDate());\r\n                    }\r\n                }\r\n            } else {\r\n                const event:Event = {\r\n                    name:\"Sorry, there are no upcoming events\",\r\n                    date: new Date()\r\n                }\r\n                this.makeEventCard(event);\r\n            }\r\n            \r\n            this.renderCalendar();\r\n            monthNameEle.innerText = `${this.monthToString(date.getMonth())} ${date.getFullYear()}`\r\n        } catch(err) {\r\n            console.error(err);\r\n            const event:Event = {\r\n                name:\"Sorry, something went wrong on our end!\",\r\n                date: new Date()\r\n            }\r\n            this.makeEventCard(event);\r\n        }\r\n        \r\n    }\r\n\r\n    private generateCalendarDays() {\r\n        const date = new Date();\r\n        const daysInMonth = new Date(date.getFullYear(), date.getMonth(), 0).getDate()+1;\r\n        this.fillDaysUntilToday(date.getDay());\r\n        for(let i = 1; i<=daysInMonth; i++) {\r\n            const ele = document.createElement(\"span\");\r\n            ele.innerText = i.toString();\r\n            this.daysEle.push(ele);\r\n        }\r\n    }   \r\n\r\n    private fillDaysUntilToday(todaysDay:number) {\r\n        const daysAwayFromToday = 7-todaysDay;\r\n        this.addDisabledDays(daysAwayFromToday);\r\n        this.daysUntilToday = daysAwayFromToday;\r\n    }\r\n\r\n    private addDisabledDays(amount:number) {\r\n        for(let i = 1; i<=amount; i++) {\r\n            const span = document.createElement(\"span\");\r\n            span.classList.add(\"disabled\");\r\n            this.daysEle.push(span);\r\n        }\r\n    }\r\n\r\n    private markCalendarDay(dayNumber:number) {\r\n        this.daysEle[dayNumber-1+this.daysUntilToday].classList.add(\"highlight\");\r\n    }\r\n\r\n\r\n    private renderCalendar() {\r\n        const gridEle = document.querySelector(\".grid\");\r\n        for(let span of this.daysEle) {\r\n            gridEle.appendChild(span);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    private makeEventCard(event:Event) {\r\n        const eventEle = document.createElement(\"div\");\r\n        const dayNumberEle = document.createElement(\"div\");\r\n        const dateEle = document.createElement(\"div\");\r\n        const monthYearEle = document.createElement(\"div\");\r\n        const dayNameEle = document.createElement(\"div\");\r\n        const titleEle = document.createElement(\"div\");\r\n        \r\n        eventEle.classList.add(\"event\");\r\n        dayNumberEle.classList.add(\"dayNumber\");\r\n        dateEle.classList.add(\"date\");\r\n        monthYearEle.classList.add(\"monthYear\");\r\n        dayNameEle.classList.add(\"dayName\");\r\n        titleEle.classList.add(\"title\");\r\n\r\n        eventEle.appendChild(dayNumberEle);\r\n        dateEle.appendChild(monthYearEle);\r\n        dateEle.appendChild(dayNameEle);\r\n        eventEle.appendChild(dateEle);\r\n        eventEle.appendChild(titleEle);\r\n\r\n        dayNumberEle.innerText = event.date.getDate().toString();\r\n        monthYearEle.innerText = `${this.monthToString(event.date.getMonth())} ${event.date.getFullYear()}`\r\n        dayNameEle.innerText = this.dayToString(event.date.getDay());\r\n        titleEle.innerText = event.name;\r\n\r\n        this.eventsCon.appendChild(eventEle);\r\n    }\r\n\r\n    //convert a month number to a string\r\n    private monthToString(month:number) {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        return months[month];\r\n    }\r\n\r\n    //convert a day number to a string \r\n    private dayToString(day:number) {\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        return days[day];\r\n    }\r\n\r\n}","import Calendar from \"./Calendar\";\r\n\r\nexport function toggleNavbar(){\r\n    const sections = document.querySelectorAll(\"section\");\r\n    const navBar = document.querySelector(\"nav\");\r\n    const hideNavBar = ()=>navBar.classList.add(\"hidden\");\r\n    const showNavBar = ()=>navBar.classList.remove(\"hidden\");\r\n    const options = {\r\n        root: document.querySelector(\"scroll-container\"),\r\n        rootMargin: \"0px\",\r\n        threshold: 1.0,\r\n    }\r\n    for(let i = 0; i < sections.length; i++) {\r\n        if(i < 2) {\r\n            new IntersectionObserver(hideNavBar, options).observe(sections[i]);\r\n        } else {\r\n            new IntersectionObserver(showNavBar, options).observe(sections[i]);\r\n        }\r\n    }\r\n    hideNavBar();\r\n    \r\n}\r\n\r\nexport function initCalendar() {\r\n    const calendar = new Calendar();\r\n    calendar.init();\r\n}\r\n\r\n\r\n","import {toggleNavbar, initCalendar} from \"./UX\";\r\nexport function IndexFunctions() {\r\n    toggleNavbar();\r\n    initCalendar();\r\n}\r\n\r\n\r\n","// import \"@fortawesome/fontawesome-free/css/fontawesome.min.css\";\r\n// import \"@fortawesome/fontawesome-free/css/solid.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport { IndexFunctions } from \"./Index/index\";\r\n\r\nIndexFunctions();\r\n\r\n"]}